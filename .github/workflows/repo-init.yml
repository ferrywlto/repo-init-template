name: Initialize Repository

on:
  workflow_dispatch:
  create:
    types: repository

jobs:
  create-repo:
    runs-on: ubuntu-latest
    env:
      API_URL: "https://api.github.com/repos/${{github.repository}}/branches"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AUTH_HEADER: "Authorization: token ${{ secrets.GITHUB_TOKEN }}"
      ACCEPT_HEADER: "Accept: application/vnd.github.v3+json"
      STRICT_RULE: |
        {
          "required_pull_request_reviews": {
              "required_approving_review_count": 2,
              "dismissal_restrictions": {
                  "teams": ["merge-managers"],
                  "teams_strict": true
              }
          },
          "required_status_checks": {
              "strict": true,
              "contexts": ["continuous-integration"]
          },
          "enforce_admins": true,
          "restrictions": {
              "teams": ["merge-managers"],
              "teams_strict": true
          },
          "allow_squash_merge": true,
          "allow_merge_commit": false,
          "allow_rebase_merge": true
        }
      LOOSE_RULE: |
        {
          "required_pull_request_reviews": {
              "required_approving_review_count": 1,
              "dismissal_restrictions": {
                  "teams": ["merge-managers"],
                  "teams_strict": true
              }
          },
          "required_status_checks": {
              "strict": true,
              "contexts": ["continuous-integration"]
          },
          "enforce_admins": true,
          "restrictions": {
              "teams": ["merge-managers"],
              "teams_strict": true
          },
        }
    steps:
      - name: Setup message function
        id: generate-endpoint
        run: |
          function generate() {
            local message="${{ env.API_URL }}/$1/protection"
            echo $message
          }
          echo "branch-protection-main=$(generate "main")" >> $GITHUB_OUTPUT
          echo "branch-protection-development=$(generate "development")" >> $GITHUB_OUTPUT
          echo "branch-protection-staging=$(generate "staging")" >> $GITHUB_OUTPUT
          echo "branch-protection-production=$(generate "production")" >> $GITHUB_OUTPUT
          echo "branch-protection-release=$(generate "release%2F%5B0-9%5D*.%5B0-9%5D*.%5B0-9%5D*")" >> $GITHUB_OUTPUT
          
      - name: Setup Git
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Create default branches
        run: |
          git checkout -b development
          git push -u origin development
          git checkout -b staging
          git push -u origin staging
          git checkout -b production
          git push -u origin production

      - name: Create branch protection (main)
        run: |
          curl -X PUT -H $AUTH_HEADER -H $ACCEPT_HEADER --data-raw '${{ env.STRICT_RULE }}' \
          ${{ steps.generate-endpoint.outputs.branch-protection-main }}

      - name: Create branch protection (staging)
        run: |
          curl -X PUT -H $AUTH_HEADER -H $ACCEPT_HEADER --data-raw '$STRICT_RULE' \
          ${{ steps.generate-endpoint.outputs.branch-protection-staging }}

      - name: Create branch protection (production)
        run: |
          curl -X PUT -H $AUTH_HEADER -H $ACCEPT_HEADER --data-raw '$STRICT_RULE' \
          ${{ steps.generate-endpoint.outputs.branch-protection-production }}

      - name: Create branch protection (development)
        run: |
          curl -X PUT -H $AUTH_HEADER -H $ACCEPT_HEADER --data-raw '$LOOSE_RULE' \
          ${{ steps.generate-endpoint.outputs.branch-protection-development }}

      - name: Create branch protection (release/[0-9]*.[0-9]*.[0-9]*)
        run: |
          curl -X PUT -H $AUTH_HEADER -H $ACCEPT_HEADER --data-raw '$LOOSE_RULE' \
          ${{ steps.generate-endpoint.outputs.branch-protection-release }}
